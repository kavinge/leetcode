/*
Given inorder and postorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.
*/


/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 
class Solution {
public:
    TreeNode *buildTree(vector<int> &inorder, vector<int> &postorder) {
        TreeNode *root=NULL,**current=&root;
        int i,j;
        stack<TreeNode*> st;
        for(i=j=postorder.size()-1;i>=0;i--){
            *current=new TreeNode(postorder[i]);
            st.push(*current);
            current=&((*current)->right);
            while(!st.empty()&&st.top()->val==inorder[j]){
                current=&(st.top()->left);
                st.pop();
                j--;
            }
        }
        return root;
    }
};
