/*
Given a 2D board containing 'X' and 'O', capture all regions surrounded by 'X'.

A region is captured by flipping all 'O's into 'X's in that surrounded region .

For example,

X X X X
X O O X
X X O X
X O X X
After running your function, the board should be:

X X X X
X X X X
X X X X
X O X X
*/

class Solution {
public:
      
    void dfs(vector<vector<char> > &board,int i,int j,int rows,int columns){
        if(i<0||i>=rows||j<0||j>=columns||board[i][j]!='O') return;
        board[i][j]='F';
        dfs(board,i-1,j,rows,columns);
        dfs(board,i+1,j,rows,columns);
        dfs(board,i,j-1,rows,columns);
        dfs(board,i,j+1,rows,columns);
        
    }
    
    void solve(vector<vector<char> > &board) {
        int rows=board.size();
        if(rows==0) return;
        int columns=board[0].size();
        if(columns==0) return;
        for(int j=0;j<columns;j++){
            dfs(board,0,j,rows,columns);
            dfs(board,rows-1,j,rows,columns);
            
        }
        
        for(int i=1;i<rows-1;i++){
            dfs(board,i,0,rows,columns);
            dfs(board,i,columns-1,rows,columns);
            
        } 
        
        for(int i=0;i<rows;i++){
            for(int j=0;j<columns;j++){
                board[i][j]=(board[i][j]!='F'?'X':'O');
            }
        }
         
    }
};
