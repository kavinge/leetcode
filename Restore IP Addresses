/*
Given a string containing only digits, restore it by returning all possible valid IP address combinations.

For example:
Given "25525511135",

return ["255.255.11.135", "255.255.111.35"]. (Order does not matter)
*/

class Solution {
public:
    vector<string> restoreIpAddresses(string s) {
        vector<string> result;
        string current[4];
        ipHelper(s,0,s.length()-1,result,current,0);
        return result;
    }
    void ipHelper(string &s, int start, int end, vector<string>& result, string* current, int index){
        if(start>end) return;
        int num = 0;
        for(int i = start; i<=(s[start]=='0'?start:end); i++){
            num = num*10 + s[i]-'0';
            if(num>255) break;
            current[index] = s.substr(start,i-start+1);
            if(index==3){
                if(i!=end) continue;
                result.push_back(current[0]+"."+current[1]+"."+current[2]+"."+current[3]);
            }else{
                ipHelper(s,i+1,end,result,current,index+1);
            }
        }
    }
};
