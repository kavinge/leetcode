/*
Given a string containing only digits, restore it by returning all possible valid IP address combinations.

For example:
Given "25525511135",

return ["255.255.11.135", "255.255.111.35"]. (Order does not matter)
*/

#include <iostream>
#include <vector>
using namespace std;

vector<string> result;

void helper(string &s,int index,int i,string current[]){
    if(s.size()-index<5-i){
        return;
    }
    int now=0;
    int m=s.size()-index-4+i;
    if(m>3) m=3;
    if(s[index]=='0') m=1;
    for(int j=0;j<m;j++){
        now=now*10+(s[index+j]-'0');
        if(i==4&&(index+j!=s.size()-1)){
            continue;
        }
        if(now<=255){
            current[i-1]=s.substr(index,j+1);
            if(i==4){
                result.push_back(current[0]+"."+current[1]+"."+current[2]+"."+current[3]);
            }else{
                helper(s,index+j+1,i+1,current);
            }
        }else{
            break;
        }
    }
}
vector<string> restoreIpAddresses(string s) {
    result.clear();
    if(s.length()<3){
        return result;
    }
    string current[4];
    helper(s,0,1,current);
    return result;
}
