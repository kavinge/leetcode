/*
Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.
*/

#include <iostream>
using namespace std;

struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

bool preHelper(TreeNode* root,int sum,int& total){
        if(root==NULL){
            return false;
        }
        total+=root->val;

        if(root->left!=NULL||root->right!=NULL){
            if(preHelper(root->left,sum,total)) return true;
            if(preHelper(root->right,sum,total)) return true;
        }else{
            if(total==sum){
                return true;
            }
        }
        total-=root->val;
        return false;
}
    
bool hasPathSum(TreeNode *root, int sum) {
    int total=0;
    return preHelper(root,sum,total);

}
