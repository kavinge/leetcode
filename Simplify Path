/*
Given an absolute path for a file (Unix-style), simplify it.

For example,
path = "/home/", => "/home"
path = "/a/./b/../../c/", => "/c"

Corner Cases:
Did you consider the case where path = "/../"?
In this case, you should return "/".
Another corner case is the path might contain multiple slashes '/' together, such as "/home//foo/".
In this case, you should ignore redundant slashes and return "/home/foo".
*/

class Solution {
public:
    string simplifyPath(string path) {
        stack<string> st;
        int i = 0, n = path.length();
        while(i<n){
            int j = ++i;
            for(; j<n && path[j]!='/'; j++);
            string p = path.substr(i, j - i);
            if(p == ".."){
                if(!st.empty()) st.pop();
            }else if(p != "." && p != ""){
                st.push(p);
            }
            i = j;
        }
        string result = "";
        while(!st.empty()){
            result = "/" + st.top() + result;
            st.pop();
        }
        return result.length() == 0 ? "/" : result; 
    }
};
