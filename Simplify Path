/*
Given an absolute path for a file (Unix-style), simplify it.

For example,
path = "/home/", => "/home"
path = "/a/./b/../../c/", => "/c"

Corner Cases:
Did you consider the case where path = "/../"?
In this case, you should return "/".
Another corner case is the path might contain multiple slashes '/' together, such as "/home//foo/".
In this case, you should ignore redundant slashes and return "/home/foo".
*/

class Solution {
public:
    string simplifyPath(string path) {
        int i = 0, p, q;
        stack<string> paths;
        
        while(i<path.length()){
            if(path[i]=='/'){
                i++;
                continue;
            }
            p = i;
            while(path[i]!='/') q=i++;
            string temp = path.substr(p, q-p+1);
            if(temp==".") continue;
            if(temp==".."){
                if(!paths.empty()) paths.pop();
            }
            else paths.push(temp);
            
        }
        string result = "";
        while(!paths.empty()){
            result="/"+paths.top()+result;
            paths.pop();
        }
        return result.length()==0?"/":result;
        
    }
};
