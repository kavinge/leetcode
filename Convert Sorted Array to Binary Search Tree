/*
Given an array where elements are sorted in ascending order, convert it to a height balanced BST.
*/

#include <iostream>
#include<vector>
using namespace std;
struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

TreeNode *BSTHelper(vector<int> &num,int left,int right){
    int middle=right-((right-left)/2);
    TreeNode* root=new TreeNode(num[middle]);
    if(left<=middle-1){
        root->left=BSTHelper(num,left,middle-1);
    }
    if(right>=middle+1){
        root->right=BSTHelper(num,middle+1,right);

    }
    return root;

}

TreeNode *sortedArrayToBST(vector<int> &num) {
    if(num.size()==0){
        return NULL;
    }
    return BSTHelper(num,0,num.size()-1);
}
