/*
Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Here are few examples.
[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0
*/

#include <iostream>
using namespace std;

int helper(int A[],int left,int right,int target){
    if(left>right){
        return left>=0?left:left+1;
    }

    int middle=(left+right)/2;
    if(A[middle]==target){
        return middle;
    }else if(A[middle]<target){
        return helper(A,middle+1,right,target);
    }else{
        return helper(A,left,middle-1,target);
    }
}

int searchInsert(int A[], int n, int target) {
    if(n==0) return 0;
    return helper(A,0,n-1,target);
}

