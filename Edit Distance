/*
Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)

You have the following 3 operations permitted on a word:

a) Insert a character
b) Delete a character
c) Replace a character
*/

#include <iostream>
#include <string>
using namespace std;

int minDistance(string word1, string word2) {
       int cost[3];
       int s1=word1.size();
       int s2=word2.size();
       int **matrix=new int*[s1+1];
       for(int k=0;k<s1+1;k++){
         matrix[k]=new int[s2+1]();
         matrix[k][0]=k;
       }
       for(int k=0;k<s2+1;k++){
         matrix[0][k]=k;
       }

       for(int i=1;i<=s1;i++){
            for(int j=1;j<=s2;j++){
                if(word1[i-1]==word2[j-1]){
                    cost[0]=matrix[i-1][j-1];
                    cost[1]=matrix[i-1][j-1];
                    cost[2]=matrix[i-1][j-1];
                }else{
                    cost[0]=matrix[i-1][j-1]+1;
                    cost[1]=matrix[i-1][j]+1;
                    cost[2]=matrix[i][j-1]+1;
                }
                matrix[i][j]=min(min(cost[0],cost[1]),cost[2]);

            }
       }
       return matrix[s1][s2];
}
