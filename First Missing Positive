/*
Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.
*/


#include <iostream>
using namespace std;

int firstMissingPositive(int A[], int n) {
    if(A==NULL||n==0){
        return 1;
    }
    if(n==1){
        if(A[0]!=1){
            return 1;
        }else{
            return 2;
        }
    }
    int i=0;
    while(i<n){
        if(A[i]>0&&A[i]<=n){
            if(A[A[i]-1]!=A[i]){
                swap(A[A[i]-1],A[i]);
            }else{
                i++;
            }
        }else{
            i++;
        }
    }

    for(i=0;i<n;i++){
        if(A[i]!=i+1){
            return i+1;
        }
    }
    return n+1;
}

