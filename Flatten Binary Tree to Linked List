/*
Given a binary tree, flatten it to a linked list in-place.

For example,
Given

         1
        / \
       2   5
      / \   \
     3   4   6
The flattened tree should look like:
   1
    \
     2
      \
       3
        \
         4
          \
           5
            \
             6
*/


#include <iostream>
using namespace std;
struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 };
 
TreeNode* helper(TreeNode *root){

    TreeNode* left=root->left;
    TreeNode* right=root->right;
    TreeNode* last=root;
    if(left!=NULL){
        root->right=left;
        last=helper(left);
    }
    if(right!=NULL){
        last->right=right;
        last=helper(right);
    }
    root->left=NULL;
    return last;
}

void flatten(TreeNode *root) {
    if(root==NULL){
        return;
    }
    helper(root);

}
