/**
Given a linked list, return the node where the cycle begins. If there is no cycle, return null.

Follow up:
Can you solve it without using extra space?
**/

class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode* c1 = head, *c2 = head;
        while(c1 != NULL){
            c1 = c1 -> next;
            if(c1 == NULL) return NULL;
            c1 = c1 -> next;
            c2 = c2 -> next;
            if(c1 == c2) break;
        }
        if(c1 == NULL) return NULL;
        c1 = head;
        while(c1 != c2){
            c1 = c1->next;
            c2 = c2->next;
        }
        return c1;
        
    }
};
