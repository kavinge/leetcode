/*
Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Try to do this in one pass.
*/

#include <iostream>
using namespace std;

struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};

ListNode *removeNthFromEnd(ListNode *head, int n) {
    ListNode *pre=NULL,*l1=head,*l2=head;
    for(int i=0;i<n-1;i++){
        if(l2==NULL) return head;
        l2=l2->next;
    }
    while(l2->next!=NULL){
        pre=l1;
        l1=l1->next;
        l2=l2->next;
    }
    if(pre==NULL) return head->next;
    pre->next=l1->next;
    return head;
}
