/*
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.
*/

class Solution {
public:
    int search(int A[], int n, int target) {
        int left = 0, right = n-1;
        while(left<=right){
            int middle = left + ((right-left)>>1);
            if(A[middle] == target) return middle;
            if(A[middle]<target){
                if(A[left]>A[right]&&A[middle]<=A[right]&&A[right]<target){
                    right = middle - 1;
                }else{
                    left = middle + 1;
                }
            }else{
                if(A[left]>A[right]&&A[middle]>=A[left]&&A[right]>=target){
                    left = middle + 1;
                }else{
                    right = middle - 1;
                }
            }
            
        }
        return -1;
    }
};
