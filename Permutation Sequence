/*
The set [1,2,3,â€¦,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3):

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

Note: Given n will be between 1 and 9 inclusive.
*/

#include <iostream>
#include <vector>
using namespace std;

string getPermutation(int n, int k) {

    if(n==0) return "";
    if(n==1) return "1";
    vector<int> num(n,0);
    for(int i=1;i<=n;i++){
        num[i-1]=i;
    }
    string result(n,'0');
    int *count=new int[n]();
    count[0]=1;
    for(int i=1;i<=n-1;i++){
        count[i]=i*count[i-1];
    }
    for(int i=n-1;i>=0;i--){
        int index=0;
        while(index*count[i]<k){
            index++;
        }
        index--;
        k-=(index*count[i]);
        result[n-1-i]=num[index]+'0';
        num.erase(num.begin()+index);
    }
    return result;

}

int main()
{

    cout << getPermutation(4,4) << endl;
    return 0;
}
