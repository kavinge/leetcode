/*
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.
*/

#include <iostream>

using namespace std;
struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};

ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
    if(l1==NULL) return l2;
    if(l2==NULL) return l1;
    ListNode *head=NULL;
    ListNode *pre=NULL;
    if(l1->val<=l2->val){
        head=l1;
        pre=l1;
        l1=l1->next;
    }else{
        head=l2;
        pre=l2;
        l2=l2->next;
    }

    while(l1!=NULL&&l2!=NULL){
        if(l1->val<=l2->val){
           pre->next=l1;
           l1=l1->next;

        }else{
            pre->next=l2;
            l2=l2->next;
        }
        pre=pre->next;
    }
    if(l1!=NULL){
        pre->next=l1;
    }else if(l2!=NULL){
        pre->next=l2;
    }
    return head;
}
