/**
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example,
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.



The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1].
In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!
**/
#include <iostream>

using namespace std;

int trap(int A[], int n) {
    if(n<3) return 0;
    int *left=new int[n-1]();
    left[0]=-1;
    int *right=new int[n]();
    right[n-1]=-1;
    for(int i=1;i<n-1;i++){
        int l=i-1;
        left[i]=-1;
        while(l!=-1){
            if(A[l]>A[i]){
                left[i]=l;
            }
            l=left[l];
        }
    }
    for(int i=n-2;i>=1;i--){
        int r=i+1;
        right[i]=-1;
        while(r!=-1){
            if(A[r]>A[i]){
                right[i]=r;
            }
            r=right[r];
        }
    }
    int result=0;
    for(int i=1;i<=n-2;i++){
        int l=left[i];int r=right[i];
        if(l==-1||r==-1) continue;
        result+=(min(A[l],A[r])-A[i]);
    }
    return result;
}
