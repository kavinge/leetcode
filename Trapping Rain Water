/**
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example,
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.



The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1].
In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!
**/

//----------time: O(n)  space: O(1)

class Solution {
public:
    int trap(int A[], int n) {
        if(n==0) return 0;
        int hi = 0, sum = 0, result = 0;
        for(int i = 1; i<n; i++){
            if(A[i]>=A[hi]){
                hi = i;
                result += sum;
                sum = 0;
            }else{
                sum += (A[hi]-A[i]);
            }
        }
        hi = n-1; sum=0;
        for(int i = n-2; i>=0; i--){
            if(A[i]>A[hi]){
                hi = i;
                result += sum;
                sum = 0;
            }else{
                sum += (A[hi]-A[i]);
            }
        }
        return result;
    }
};
