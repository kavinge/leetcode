/*
Given a set of distinct integers, S, return all possible subsets.

Note:

Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
For example,
If S = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
*/

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector<vector<int> > result;

vector<vector<int> > subsets(vector<int> &S) {
    result.clear();
    int n=S.size();
    int total=1<<n;
    sort(S.begin(),S.end());
    for(int i=0;i<total;i++){
        vector<int> temp;
        for(int j=n-1;j>=0;j--){
            if(i&(1<<j)) temp.push_back(S[n-1-j]);
        }
        result.push_back(temp);
    }
    return result;
}
