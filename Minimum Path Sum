/*
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.
*/

class Solution {
public:
    int minPathSum(vector<vector<int> > &grid) {
        vector<vector<int> > dp(grid);
        int m = grid.size();
        int n = grid[0].size();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(i||j){
                    dp[i][j] += min(i?dp[i-1][j]:0x7fffffff,j?dp[i][j-1]:0x7fffffff);    
                }
                
            }
        }
        return dp[m-1][n-1];
        
    }
};
