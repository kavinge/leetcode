/*
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.
*/

#include <iostream>
#include <vector>
using namespace std;

int minPathSum(vector<vector<int> > &grid) {
    int m=grid.size();
    if(m==0){
        return 0;
    }
    int n=grid[0].size();
    if(n==0){
        return 0;
    }

    int** matrix=new int*[m+1];
    int i,j;
    for(i=0;i<m+1;i++){
        matrix[i]=new int[n+1]();
        matrix[i][0]=0x7fffffff;
    }
    for(j=0;j<n+1;j++){
        matrix[0][j]=0x7fffffff;
    }
    matrix[0][1]=0;
    for(i=1;i<m+1;i++){
        for(j=1;j<n+1;j++){
            matrix[i][j]=min(matrix[i][j-1],matrix[i-1][j])+grid[i-1][j-1];
        }
    }
    return matrix[m][n];
}
