/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ? b ? c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
*/

#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;

class Solution {
public:
    vector<vector<int> > threeSum(vector<int> &num) {
        vector<vector<int> > result;
        if(num.size()<3) return result;
        sort(num.begin(),num.end());
        for(int i=0;i<num.size();i++){
            if(i!=0&&num[i]==num[i-1]) continue;
            int left=i+1,right=num.size()-1;
            while(left<right){
                if(left!=i+1&&num[left]==num[left-1]){ 
                    left++;continue;
                }
                if(right!=num.size()-1&&num[right]==num[right+1]){
                    right--;continue;
                }
                int sum=num[i]+num[left]+num[right];
                if(sum==0){
                   result.push_back(vector<int>({num[i],num[left],num[right]}));
                   left++;right--;
                }else if(sum<0){
                    left++;
                }else{
                    right--;
                }
            }
        }
        return result;
        
    }
};
