/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ? b ? c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
*/


class Solution {
public:
    vector<vector<int> > threeSum(vector<int> &num) {
        vector<vector<int> > result;
        int n = num.size();
        sort(num.begin(), num.end());
        for(int i=0; i<n-2; i++){
            if(i != 0 && num[i] == num[i-1]){
                continue;
            }
            int target = -num[i], left = i + 1, right = n - 1;
            while(left < right){
                if(num[left] + num[right] == target){
                    result.push_back(vector<int>({num[i], num[left], num[right]}));
                    while( ++left < right && num[left] == num[left-1] );
                }else if(num[left] + num[right] < target){
                    left ++;
                }else{
                    right --;
                }
            }
        }
        return result;
    }
};
