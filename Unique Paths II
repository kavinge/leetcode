/**
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?



Above is a 3 x 7 grid. How many possible unique paths are there?

Note: m and n will be at most 100.

**/


#include <iostream>
using namespace std;

int a[100][100]={{0}};

int uniquePaths(int m, int n) {
    if(m<1||n<1) return 0;
    if(m==1||n==1) return 1;
    if(a[m][n]!=0) return a[m][n];
    int r1=0,r2=0;
    if(m-1>0){
            r1=uniquePaths(m-1,n);
            a[m-1][n]=r1;
    }
    if(n-1>0){
            r2=uniquePaths(m,n-1);
            a[m][n-1]=r2;
    }
    a[m][n]=r1+r2;
    return a[m][n];

}
