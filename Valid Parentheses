/**
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.
**/

class Solution {
public:
    bool isValid(string s) {
        stack<char> parentheses;
        unordered_map<char,char> pair;
        pair['(']=')'; 
        pair['[']=']'; 
        pair['{']='}';
        
        for(int i=0; i<s.length(); i++){
            char t = s[i];
            if(t=='(' || t=='{' || t== '['){
                parentheses.push(t);
            }else{
                if(parentheses.empty() || pair[parentheses.top()]!=t) return false;
                parentheses.pop();
            }
        }
        return parentheses.empty();
    }
};
