/**
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.
**/
#include <iostream>
#include <string>
#include <stack>
#include <map>
using namespace std;

bool isValid(string s) {
    int n=s.size();
    if(n%2==1) return false;
    map<char,char> ms;
    ms['(']=')';
    ms['[']=']';
    ms['{']='}';
    stack<char> c_stack;
    for(int i=0;i<n;i++){
        if(s[i]=='('||s[i]=='['||s[i]=='{'){
            c_stack.push(s[i]);
        }else{
            if(c_stack.empty()||ms[c_stack.top()]!=s[i]) return false;
            c_stack.pop();
        }
    }
    return c_stack.empty();
}
