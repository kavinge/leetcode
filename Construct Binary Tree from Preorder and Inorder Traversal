/*
Given preorder and inorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.
*/


/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 
class Solution {
public:
    TreeNode *buildTree(vector<int> &preorder, vector<int> &inorder) {
        TreeNode *root=NULL,**current=&root;
        stack<TreeNode*> st;
        int i,j;
        for(i=j=0;i<preorder.size();i++){
            *current=new TreeNode(preorder[i]);
            st.push(*current);
            current=&((*current)->left);
            while(!st.empty()&&st.top()->val==inorder[j]){
                current=&(st.top()->right);
                st.pop();
                j++;
            }
        }
        return root;
    }
};

