/*
Given an array of strings, return all groups of strings that are anagrams.

Note: All inputs will be in lower-case.
*/
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

class Solution {
public:

    vector<string> anagrams(vector<string> &strs) {
        vector<string> result;
        map<string, vector<string> > dict;
        for(int i=0;i<strs.size();i++){
            string str=strs[i];
            sort(str.begin(),str.end());
            dict[str].push_back(strs[i]);
        }
        for(map<string, vector<string> >::iterator it=dict.begin();it!=dict.end();it++){
            if(it->second.size()>1){
                result.insert(result.end(),it->second.begin(),it->second.end());
            }
        }
        return result;
    }
    
};
