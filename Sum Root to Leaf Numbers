#include <iostream>
/**
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.

An example is the root-to-leaf path 1->2->3 which represents the number 123.

Find the total sum of all root-to-leaf numbers.

For example,

    1
   / \
  2   3
The root-to-leaf path 1->2 represents the number 12.
The root-to-leaf path 1->3 represents the number 13.

Return the sum = 12 + 13 = 25.
**/
using namespace std;

struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

void preHelper(TreeNode *root,int sum,int &result){
    if(root==NULL){
        return;
    }
    sum=sum*10+root->val;
    if(root->left||root->right){
        preHelper(root->left,sum,result);
        preHelper(root->right,sum,result);
    }else{
        result+=sum;
    }
}

int sumNumbers(TreeNode *root) {
    int result=0;
    preHelper(root,0,result);
    return result;
}

