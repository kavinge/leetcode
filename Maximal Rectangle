/*
Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing all ones and return its area.
*/

#include <iostream>
#include <vector>
using namespace std;

int maximalRectangle(vector<vector<char> > &matrix) {
    int col=matrix.size();
    if(col==0){
        return 0;
    }
    int row=matrix[0].size();
    if(row==0){
        return 0;
    }

    int **len=new int*[col+1];

    int i,j;
    for(i=0;i<=col;i++){
        len[i]=new int[row+1]();
    }
    for(i=1;i<=col;i++){
        for(j=1;j<=row;j++){
            if(matrix[i-1][j-1]=='1'){
                len[i][j]=len[i][j-1]+1;
            }else{
                len[i][j]=0;
            }
        }
    }
    int minR=row;
    int result=0;
    for(i=1;i<=col;i++){
        for(j=1;j<=row;j++){
            minR=row;
            for(int k=i;k<=col;k++){
                if(len[k][j]==0){
                    break;
                }
                minR=min(len[k][j],minR);
                result=max(result,minR*(k-i+1));
            }
        }
    }
    return result;
}

int main()
{
    vector<vector<char> >a;
    vector<char> aa;
    aa.push_back('1');
    aa.push_back('1');
    a.push_back(aa);
    cout << maximalRectangle(a) << endl;
    return 0;
}
