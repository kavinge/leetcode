/*
Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing all ones and return its area.
*/


class Solution {
public:
    int maximalRectangle(vector<vector<char> > &matrix) {
        int rows=matrix.size();
        if(rows==0) return 0;
        int columns=matrix[0].size();
        if(columns==0) return 0;
        int * height=new int[columns+1]();
        int result=0;
        for(int i=rows-1;i>=0;i--){
            stack<int> st;
            st.push(-1);
            for(int j=0;j<=columns;j++){
                if(j<columns&&matrix[i][j]=='1') height[j]+=1;
                else height[j]=0;
                while(st.top()>=0&&height[st.top()]>height[j]){
                    int t=st.top();
                    st.pop();
                    result=max(result,height[t]*(j-st.top()-1));
                }
                st.push(j);
            }
        }
        return result;
    }
};
