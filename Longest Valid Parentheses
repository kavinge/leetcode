/*
Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.

For "(()", the longest valid parentheses substring is "()", which has length = 2.

Another example is ")()())", where the longest valid parentheses substring is "()()", which has length = 4.
*/

#include <iostream>
#include <string>
#include <stack>
using namespace std;

int longestValidParentheses(string s) {
    int result=0;
    int begin=0;
    stack<int> buffers;
    for(int i=0;i<s.size();i++){
        if(s[i]=='('){
            buffers.push(i);
        }else{
            if(!buffers.empty()){
                buffers.pop();
                if(!buffers.empty()){
                    result=max(result,i-buffers.top());
                }else{
                    result=max(result,i-begin+1);
                }
            }else{
                begin=i+1;
            }
        }
    }
    return result;
}
